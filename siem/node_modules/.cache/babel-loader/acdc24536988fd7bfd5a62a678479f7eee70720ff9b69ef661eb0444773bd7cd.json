{"ast":null,"code":"var _jsxFileName = \"D:\\\\CDAC-SIEM\\\\siem\\\\src\\\\components\\\\siem-piechart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Chart from 'react-google-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SiemPieChart = () => {\n  _s();\n  const [pieChartData, setPieChartData] = useState({\n    rule_description: [],\n    bg_count: [],\n    Color_codes: [],\n    status: ''\n  });\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/get-pie_chart\");\n      const pieChartDataCount = await response.json();\n      console.log(pieChartDataCount);\n      setPieChartData(pieChartDataCount.data); // Access the nested \"data\" property\n      console.log(\"Fetched Data:\", pieChartDataCount);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  function capitalizeEveryWord(string) {\n    return string.replace(/\\b\\w/g, word => word.toUpperCase());\n  }\n  const chartData = pieChartData.Color_codes ? [['Color', 'Count']].concat(pieChartData.rule_description.map((color, index) => [capitalizeEveryWord(color), pieChartData.bg_count[index]])) : [];\n  console.log(\"Updated Data:\", chartData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"SIEM ALERTS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), pieChartData.status === 'Success' && pieChartData.Color_codes ? /*#__PURE__*/_jsxDEV(Chart, {\n      width: '650px',\n      height: '400px',\n      chartType: \"PieChart\",\n      loader: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }, this),\n      data: chartData,\n      options: {\n        title: '',\n        backgroundColor: 'transparent',\n        fontWeight: '700',\n        width: '600px'\n      },\n      rootProps: {\n        'data-testid': '1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(SiemPieChart, \"x3ER82wlOsvO1706z7Wz5DTDFgI=\");\n_c = SiemPieChart;\nexport default SiemPieChart;\nvar _c;\n$RefreshReg$(_c, \"SiemPieChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","jsxDEV","_jsxDEV","SiemPieChart","_s","pieChartData","setPieChartData","rule_description","bg_count","Color_codes","status","fetchData","response","fetch","pieChartDataCount","json","console","log","data","error","capitalizeEveryWord","string","replace","word","toUpperCase","chartData","concat","map","color","index","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","chartType","loader","options","title","backgroundColor","fontWeight","rootProps","_c","$RefreshReg$"],"sources":["D:/CDAC-SIEM/siem/src/components/siem-piechart.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Chart from 'react-google-charts';\r\n\r\nconst SiemPieChart = () => {\r\n  const [pieChartData, setPieChartData] = useState({\r\n    rule_description: [],\r\n    bg_count: [],\r\n    Color_codes: [],\r\n    status: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:3001/get-pie_chart\");\r\n      const pieChartDataCount = await response.json();\r\n      console.log(pieChartDataCount);\r\n      setPieChartData(pieChartDataCount.data); // Access the nested \"data\" property\r\n      console.log(\"Fetched Data:\", pieChartDataCount);\r\n    } catch (error) {\r\n      console.error(error);\r\n      \r\n    }\r\n  };\r\n  function capitalizeEveryWord(string) {\r\n    return string.replace(/\\b\\w/g, (word) => word.toUpperCase());\r\n  }\r\n  \r\n\r\n  const chartData = pieChartData.Color_codes\r\n    ? [['Color', 'Count']].concat(\r\n        pieChartData.rule_description.map((color, index) => [\r\n          capitalizeEveryWord(color),\r\n          pieChartData.bg_count[index],\r\n        ])\r\n      )\r\n    : [];\r\n    console.log(\"Updated Data:\", chartData)\r\n\r\n  return (\r\n    <div>\r\n      <h3 >SIEM ALERTS</h3>\r\n      {pieChartData.status === 'Success' && pieChartData.Color_codes ? (\r\n        <Chart\r\n          width={'650px'}\r\n          height={'400px'}\r\n          chartType=\"PieChart\"\r\n          loader={<div>Loading Chart</div>}\r\n          data={chartData}\r\n          options={{\r\n            title: '',\r\n            backgroundColor :'transparent',\r\n            fontWeight:'700',\r\n            width:'600px'\r\n          }}\r\n          rootProps={{ 'data-testid': '1' }}\r\n        />\r\n      ) : (\r\n        <p>Loading...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SiemPieChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}