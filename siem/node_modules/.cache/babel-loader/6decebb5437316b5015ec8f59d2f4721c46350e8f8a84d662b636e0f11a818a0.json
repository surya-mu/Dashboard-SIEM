{"ast":null,"code":"var _jsxFileName = \"D:\\\\CDAC-SIEM\\\\siem\\\\src\\\\components\\\\wazuh_agents.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WazuhAgents = () => {\n  _s();\n  const [agentsCount, setAgentsCount] = useState({\n    data: {\n      total: 0,\n      active: 0,\n      inactive: 0,\n      never_connected: 0\n    }\n  });\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/get-agents_count\");\n      const agentsCountData = await response.json();\n      setAgentsCount(agentsCountData);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Wazuh Agents Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Total Number of Agents: \", agentsCount.data[0].total]\n      }, 1, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Active Agents: \", agentsCount.data[0].active]\n      }, 2, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Inactive Agents: \", agentsCount.data[0].inactive]\n      }, 3, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Never Connected Agents: \", agentsCount.data[0].never_connected]\n      }, 4, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(WazuhAgents, \"QgCk57BWNUO090YI4ptZP6DLvMg=\");\n_c = WazuhAgents;\nexport default WazuhAgents;\nvar _c;\n$RefreshReg$(_c, \"WazuhAgents\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","WazuhAgents","_s","agentsCount","setAgentsCount","data","total","active","inactive","never_connected","fetchData","response","fetch","agentsCountData","json","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/CDAC-SIEM/siem/src/components/wazuh_agents.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst WazuhAgents = () => {\r\n    const [agentsCount, setAgentsCount] = useState({\r\n        data: {\r\n            total: 0,\r\n            active: 0,\r\n            inactive: 0,\r\n            never_connected: 0,\r\n        },\r\n    });\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:3001/get-agents_count\");\r\n            const agentsCountData = await response.json();\r\n            setAgentsCount(agentsCountData);\r\n\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <center>\r\n                <h1>Wazuh Agents Count</h1>\r\n                </center>\r\n                <ul>\r\n                    <li key={1}>Total Number of Agents: {agentsCount.data[0].total}</li>\r\n                    <li key={2}>Active Agents: {agentsCount.data[0].active}</li>\r\n                    <li key={3}>Inactive Agents: {agentsCount.data[0].inactive}</li>\r\n                    <li key={4}>Never Connected Agents: {agentsCount.data[0].never_connected}</li>\r\n                </ul>\r\n \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WazuhAgents;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC;IAC3CQ,IAAI,EAAE;MACFC,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE,CAAC;MACTC,QAAQ,EAAE,CAAC;MACXC,eAAe,EAAE;IACrB;EACJ,CAAC,CAAC;EAEFX,SAAS,CAAC,MAAM;IACZY,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,CAAC;MACtE,MAAMC,eAAe,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC7CV,cAAc,CAACS,eAAe,CAAC;IAEnC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACxB;EACJ,CAAC;EAED,oBACIf,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,eACIjB,OAAA;QAAAiB,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eACTrB,OAAA;MAAAiB,QAAA,gBACIjB,OAAA;QAAAiB,QAAA,GAAY,0BAAwB,EAACd,WAAW,CAACE,IAAI,CAAC,CAAC,CAAC,CAACC,KAAK;MAAA,GAArD,CAAC;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAyD,CAAC,eACpErB,OAAA;QAAAiB,QAAA,GAAY,iBAAe,EAACd,WAAW,CAACE,IAAI,CAAC,CAAC,CAAC,CAACE,MAAM;MAAA,GAA7C,CAAC;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiD,CAAC,eAC5DrB,OAAA;QAAAiB,QAAA,GAAY,mBAAiB,EAACd,WAAW,CAACE,IAAI,CAAC,CAAC,CAAC,CAACG,QAAQ;MAAA,GAAjD,CAAC;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqD,CAAC,eAChErB,OAAA;QAAAiB,QAAA,GAAY,0BAAwB,EAACd,WAAW,CAACE,IAAI,CAAC,CAAC,CAAC,CAACI,eAAe;MAAA,GAA/D,CAAC;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAER,CAAC;AAEd,CAAC;AAACnB,EAAA,CAvCID,WAAW;AAAAqB,EAAA,GAAXrB,WAAW;AAyCjB,eAAeA,WAAW;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}