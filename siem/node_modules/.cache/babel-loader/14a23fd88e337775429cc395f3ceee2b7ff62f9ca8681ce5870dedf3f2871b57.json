{"ast":null,"code":"var _jsxFileName = \"D:\\\\CDAC-SIEM\\\\siem\\\\src\\\\components\\\\siem-piechart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Chart from 'react-google-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SiemPieChart = () => {\n  _s();\n  const [pieChartData, setPieChartData] = useState({\n    data: {\n      rule_description: [],\n      bg_count: [],\n      Color_codes: [],\n      status: ''\n    }\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/get-pie_chart');\n        const contentType = response.headers.get('content-type');\n        if (contentType && contentType.includes('application/json')) {\n          const responseData = await response.json();\n          if (responseData && responseData.status === 'Success') {\n            const data = responseData.data.rule_description.map((description, index) => [description, responseData.data.bg_count[index]]);\n            setPieChartData([['Rule Description', 'Count'], ...data]);\n          } else {\n            console.error('Error fetching pie chart data:', responseData);\n            // Handle the case where the response is not in the expected format\n          }\n        } else {\n          console.error('Non-JSON response:', response);\n          // Handle the case where the response is not JSON\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pie Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      width: '100%',\n      height: '400px',\n      chartType: \"PieChart\",\n      data: pieChartData,\n      options: {\n        title: 'Pie Chart',\n        is3D: true\n      },\n      rootProps: {\n        'data-testid': '1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(SiemPieChart, \"/+jc62k81RCRes9XHi/1rB3LZkg=\");\n_c = SiemPieChart;\nexport default SiemPieChart;\nvar _c;\n$RefreshReg$(_c, \"SiemPieChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","jsxDEV","_jsxDEV","SiemPieChart","_s","pieChartData","setPieChartData","data","rule_description","bg_count","Color_codes","status","fetchData","response","fetch","contentType","headers","get","includes","responseData","json","map","description","index","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","chartType","options","title","is3D","rootProps","_c","$RefreshReg$"],"sources":["D:/CDAC-SIEM/siem/src/components/siem-piechart.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Chart from 'react-google-charts';\r\n\r\nconst SiemPieChart = () => {\r\n    const [pieChartData, setPieChartData] = useState({\r\n        data: {\r\n          rule_description: [],\r\n          bg_count: [],\r\n          Color_codes: [],\r\n          status: ''\r\n        }\r\n      });\r\n      \r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n        try {\r\n          const response = await fetch('/get-pie_chart');\r\n          const contentType = response.headers.get('content-type');\r\n      \r\n          if (contentType && contentType.includes('application/json')) {\r\n            const responseData = await response.json();\r\n      \r\n            if (responseData && responseData.status === 'Success') {\r\n              const data = responseData.data.rule_description.map((description, index) => [\r\n                description,\r\n                responseData.data.bg_count[index],\r\n              ]);\r\n      \r\n              setPieChartData([['Rule Description', 'Count'], ...data]);\r\n            } else {\r\n              console.error('Error fetching pie chart data:', responseData);\r\n              // Handle the case where the response is not in the expected format\r\n            }\r\n          } else {\r\n            console.error('Non-JSON response:', response);\r\n            // Handle the case where the response is not JSON\r\n          }\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      };\r\n      \r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Pie Chart</h2>\r\n      <Chart\r\n        width={'100%'}\r\n        height={'400px'}\r\n        chartType=\"PieChart\"\r\n        data={pieChartData}\r\n        options={{\r\n          title: 'Pie Chart',\r\n          is3D: true,\r\n        }}\r\n        rootProps={{ 'data-testid': '1' }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SiemPieChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC;IAC7CS,IAAI,EAAE;MACJC,gBAAgB,EAAE,EAAE;MACpBC,QAAQ,EAAE,EAAE;MACZC,WAAW,EAAE,EAAE;MACfC,MAAM,EAAE;IACV;EACF,CAAC,CAAC;EAGNZ,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAgB,CAAC;QAC9C,MAAMC,WAAW,GAAGF,QAAQ,CAACG,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAExD,IAAIF,WAAW,IAAIA,WAAW,CAACG,QAAQ,CAAC,kBAAkB,CAAC,EAAE;UAC3D,MAAMC,YAAY,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;UAE1C,IAAID,YAAY,IAAIA,YAAY,CAACR,MAAM,KAAK,SAAS,EAAE;YACrD,MAAMJ,IAAI,GAAGY,YAAY,CAACZ,IAAI,CAACC,gBAAgB,CAACa,GAAG,CAAC,CAACC,WAAW,EAAEC,KAAK,KAAK,CAC1ED,WAAW,EACXH,YAAY,CAACZ,IAAI,CAACE,QAAQ,CAACc,KAAK,CAAC,CAClC,CAAC;YAEFjB,eAAe,CAAC,CAAC,CAAC,kBAAkB,EAAE,OAAO,CAAC,EAAE,GAAGC,IAAI,CAAC,CAAC;UAC3D,CAAC,MAAM;YACLiB,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEN,YAAY,CAAC;YAC7D;UACF;QACF,CAAC,MAAM;UACLK,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEZ,QAAQ,CAAC;UAC7C;QACF;MACF,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAGHb,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB5B,OAAA,CAACF,KAAK;MACJ+B,KAAK,EAAE,MAAO;MACdC,MAAM,EAAE,OAAQ;MAChBC,SAAS,EAAC,UAAU;MACpB1B,IAAI,EAAEF,YAAa;MACnB6B,OAAO,EAAE;QACPC,KAAK,EAAE,WAAW;QAClBC,IAAI,EAAE;MACR,CAAE;MACFC,SAAS,EAAE;QAAE,aAAa,EAAE;MAAI;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA5DID,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AA8DlB,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}