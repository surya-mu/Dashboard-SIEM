{"ast":null,"code":"var _jsxFileName = \"D:\\\\CDAC-SIEM\\\\siem\\\\src\\\\components\\\\siem-piechart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chart } from 'react-google-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SiemPieChart = () => {\n  _s();\n  const [pieChartData, setPieChartData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await fetch(\"http://localhost:3001/get-pie_chart\");\n      const pieChartDataCount = await response.json();\n      console.log(pieChartDataCount);\n      setPieChartData(pieChartDataCount);\n      setLoading(false);\n    } catch (error) {\n      console.error(error);\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }, this);\n  }\n  if (!pieChartData || !pieChartData.Color_codes) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n  const chartData = [['Color', 'Count']].concat(pieChartData.rule_description.map((color, index) => [color.toString().split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' '), pieChartData.bg_count[index]]));\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    width: '1000px',\n    height: '800px',\n    chartType: \"PieChart\",\n    loader: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }, this),\n    data: chartData,\n    options: {\n      title: 'SIEM Alerts'\n    },\n    rootProps: {\n      'data-testid': '1'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(SiemPieChart, \"t2tX8KRtyDBTrWX5fmDNHQnVDJI=\");\n_c = SiemPieChart;\nexport default SiemPieChart;\nvar _c;\n$RefreshReg$(_c, \"SiemPieChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","jsxDEV","_jsxDEV","SiemPieChart","_s","pieChartData","setPieChartData","loading","setLoading","fetchData","response","fetch","pieChartDataCount","json","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","Color_codes","chartData","concat","rule_description","map","color","index","toString","split","word","charAt","toUpperCase","slice","join","bg_count","width","height","chartType","loader","data","options","title","rootProps","_c","$RefreshReg$"],"sources":["D:/CDAC-SIEM/siem/src/components/siem-piechart.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Chart } from 'react-google-charts';\r\n\r\nconst SiemPieChart = () => {\r\n  const [pieChartData, setPieChartData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await fetch(\"http://localhost:3001/get-pie_chart\");\r\n      const pieChartDataCount = await response.json();\r\n      console.log(pieChartDataCount);\r\n      setPieChartData(pieChartDataCount);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  if (!pieChartData || !pieChartData.Color_codes) {\r\n    return <p>No data available.</p>;\r\n  }\r\n\r\n  const chartData = [['Color', 'Count']].concat(\r\n    pieChartData.rule_description.map((color, index) => [\r\n      color\r\n        .toString()\r\n        .split(' ')\r\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1))\r\n        .join(' '),\r\n      pieChartData.bg_count[index],\r\n    ])\r\n  );\r\n\r\n  return (\r\n    <Chart\r\n      width={'1000px'}\r\n      height={'800px'}\r\n      chartType=\"PieChart\"\r\n      loader={<div>Loading Chart</div>}\r\n      data={chartData}\r\n      options={{\r\n        title: 'SIEM Alerts',\r\n      }}\r\n      rootProps={{ 'data-testid': '1' }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SiemPieChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdU,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;MACnE,MAAMC,iBAAiB,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAC/CC,OAAO,CAACC,GAAG,CAACH,iBAAiB,CAAC;MAC9BN,eAAe,CAACM,iBAAiB,CAAC;MAClCJ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;MACpBR,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,IAAID,OAAO,EAAE;IACX,oBAAOL,OAAA;MAAAe,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC1B;EAEA,IAAI,CAAChB,YAAY,IAAI,CAACA,YAAY,CAACiB,WAAW,EAAE;IAC9C,oBAAOpB,OAAA;MAAAe,QAAA,EAAG;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAClC;EAEA,MAAME,SAAS,GAAG,CAAC,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAACC,MAAM,CAC3CnB,YAAY,CAACoB,gBAAgB,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,KAAK,CAClDD,KAAK,CACFE,QAAQ,CAAC,CAAC,CACVC,KAAK,CAAC,GAAG,CAAC,CACVJ,GAAG,CAACK,IAAI,IAAIA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC,CACzDC,IAAI,CAAC,GAAG,CAAC,EACZ9B,YAAY,CAAC+B,QAAQ,CAACR,KAAK,CAAC,CAC7B,CACH,CAAC;EAED,oBACE1B,OAAA,CAACF,KAAK;IACJqC,KAAK,EAAE,QAAS;IAChBC,MAAM,EAAE,OAAQ;IAChBC,SAAS,EAAC,UAAU;IACpBC,MAAM,eAAEtC,OAAA;MAAAe,QAAA,EAAK;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAE;IACjCoB,IAAI,EAAElB,SAAU;IAChBmB,OAAO,EAAE;MACPC,KAAK,EAAE;IACT,CAAE;IACFC,SAAS,EAAE;MAAE,aAAa,EAAE;IAAI;EAAE;IAAA1B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEN,CAAC;AAACjB,EAAA,CArDID,YAAY;AAAA0C,EAAA,GAAZ1C,YAAY;AAuDlB,eAAeA,YAAY;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}