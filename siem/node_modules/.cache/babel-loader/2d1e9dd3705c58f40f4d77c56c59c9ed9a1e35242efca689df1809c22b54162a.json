{"ast":null,"code":"var _jsxFileName = \"D:\\\\CDAC-SIEM\\\\siem\\\\src\\\\components\\\\siem-piechart.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Chart from 'react-google-charts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SiemPieChart = () => {\n  _s();\n  const [pieChartData, setPieChartData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/get-pie_chart');\n        if (!response.ok) {\n          console.error('Error fetching pie chart data:', response.statusText);\n          return;\n        }\n        const contentType = response.headers.get('content-type');\n        if (contentType && contentType.includes('application/json')) {\n          const responseData = await response.json();\n          if (responseData && responseData.data && responseData.data.status === 'Success') {\n            const data = responseData.data.rule_description.map((description, index) => [description, responseData.data.bg_count[index]]);\n            setPieChartData([['Rule Description', 'Count'], ...data]);\n          } else {\n            console.error('Error fetching pie chart data:', responseData);\n            // Handle the case where the response is not in the expected format\n          }\n        } else {\n          console.error('Non-JSON response:', response);\n          // Handle the case where the response is not JSON\n        }\n      } catch (error) {\n        console.error('Error fetching pie chart data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pie Chart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chart, {\n      width: '100%',\n      height: '400px',\n      chartType: \"PieChart\",\n      data: pieChartData,\n      options: {\n        title: 'Pie Chart',\n        is3D: true\n      },\n      rootProps: {\n        'data-testid': '1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(SiemPieChart, \"6rqNnJxPLAjx5280gIWZUt4iBXQ=\");\n_c = SiemPieChart;\nexport default SiemPieChart;\nvar _c;\n$RefreshReg$(_c, \"SiemPieChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","jsxDEV","_jsxDEV","SiemPieChart","_s","pieChartData","setPieChartData","fetchData","response","fetch","ok","console","error","statusText","contentType","headers","get","includes","responseData","json","data","status","rule_description","map","description","index","bg_count","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","chartType","options","title","is3D","rootProps","_c","$RefreshReg$"],"sources":["D:/CDAC-SIEM/siem/src/components/siem-piechart.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Chart from 'react-google-charts';\r\n\r\nconst SiemPieChart = () => {\r\n  const [pieChartData, setPieChartData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('/get-pie_chart');\r\n        \r\n        if (!response.ok) {\r\n          console.error('Error fetching pie chart data:', response.statusText);\r\n          return;\r\n        }\r\n\r\n        const contentType = response.headers.get('content-type');\r\n        \r\n        if (contentType && contentType.includes('application/json')) {\r\n          const responseData = await response.json();\r\n\r\n          if (responseData && responseData.data && responseData.data.status === 'Success') {\r\n            const data = responseData.data.rule_description.map((description, index) => [\r\n              description,\r\n              responseData.data.bg_count[index],\r\n            ]);\r\n\r\n            setPieChartData([['Rule Description', 'Count'], ...data]);\r\n          } else {\r\n            console.error('Error fetching pie chart data:', responseData);\r\n            // Handle the case where the response is not in the expected format\r\n          }\r\n        } else {\r\n          console.error('Non-JSON response:', response);\r\n          // Handle the case where the response is not JSON\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching pie chart data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Pie Chart</h2>\r\n      <Chart\r\n        width={'100%'}\r\n        height={'400px'}\r\n        chartType=\"PieChart\"\r\n        data={pieChartData}\r\n        options={{\r\n          title: 'Pie Chart',\r\n          is3D: true,\r\n        }}\r\n        rootProps={{ 'data-testid': '1' }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SiemPieChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAgB,CAAC;QAE9C,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChBC,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEJ,QAAQ,CAACK,UAAU,CAAC;UACpE;QACF;QAEA,MAAMC,WAAW,GAAGN,QAAQ,CAACO,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;QAExD,IAAIF,WAAW,IAAIA,WAAW,CAACG,QAAQ,CAAC,kBAAkB,CAAC,EAAE;UAC3D,MAAMC,YAAY,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;UAE1C,IAAID,YAAY,IAAIA,YAAY,CAACE,IAAI,IAAIF,YAAY,CAACE,IAAI,CAACC,MAAM,KAAK,SAAS,EAAE;YAC/E,MAAMD,IAAI,GAAGF,YAAY,CAACE,IAAI,CAACE,gBAAgB,CAACC,GAAG,CAAC,CAACC,WAAW,EAAEC,KAAK,KAAK,CAC1ED,WAAW,EACXN,YAAY,CAACE,IAAI,CAACM,QAAQ,CAACD,KAAK,CAAC,CAClC,CAAC;YAEFnB,eAAe,CAAC,CAAC,CAAC,kBAAkB,EAAE,OAAO,CAAC,EAAE,GAAGc,IAAI,CAAC,CAAC;UAC3D,CAAC,MAAM;YACLT,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEM,YAAY,CAAC;YAC7D;UACF;QACF,CAAC,MAAM;UACLP,OAAO,CAACC,KAAK,CAAC,oBAAoB,EAAEJ,QAAQ,CAAC;UAC7C;QACF;MACF,CAAC,CAAC,OAAOI,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IAEDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClB7B,OAAA,CAACF,KAAK;MACJgC,KAAK,EAAE,MAAO;MACdC,MAAM,EAAE,OAAQ;MAChBC,SAAS,EAAC,UAAU;MACpBd,IAAI,EAAEf,YAAa;MACnB8B,OAAO,EAAE;QACPC,KAAK,EAAE,WAAW;QAClBC,IAAI,EAAE;MACR,CAAE;MACFC,SAAS,EAAE;QAAE,aAAa,EAAE;MAAI;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAzDID,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AA2DlB,eAAeA,YAAY;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}